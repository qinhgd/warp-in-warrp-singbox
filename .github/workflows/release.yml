# .github/workflows/release.yml

name: 'Build, Push to GHCR & Upload to Release' # <--  MODIFIED: Added quotes to handle the special '&' character.

# Trigger condition: Fires when a new Release is published on the GitHub repository's "Releases" page.
on:
  release:
    types: [published]

# Set permissions for the workflow.
permissions:
  contents: write      # Allows uploading files to the Release.
  packages: write      # Allows pushing to the GitHub Container Registry (GHCR).

# Environment variables for easy management.
env:
  # Defines the base name for the image, automatically using "username/repository_name".
  IMAGE_BASENAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: üßæ Checkout repository code
        uses: actions/checkout@v4

      - name: üîß Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: üîë Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: üì¶ Prepare image tags and filename
        id: prep
        run: |
          TAR_NAME="${{ github.event.repository.name }}-${{ github.ref_name }}.tar"
          IMAGE_TAGS="${{ env.IMAGE_BASENAME }}:latest,${{ env.IMAGE_BASENAME }}:${{ github.ref_name }}"
          echo "TAR_NAME=${TAR_NAME}" >> $GITHUB_ENV
          echo "IMAGE_TAGS=${IMAGE_TAGS}" >> $GITHUB_ENV
      
      - name: üõ†Ô∏è Build, push, and package the image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ env.IMAGE_TAGS }}
          outputs: type=docker,dest=${{ env.TAR_NAME }}

      - name: ‚¨ÜÔ∏è Upload packaged file to Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.TAR_NAME }}
