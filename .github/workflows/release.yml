# .github/workflows/release.yml

name: Build, Push to GHCR & Upload to Release

# 触发条件：当在 GitHub 仓库的 "Releases" 页面上发布一个新的 Release 时触发
on:
  release:
    types: [published]

# 为工作流设置权限
permissions:
  contents: write      # 允许上传文件到 Release
  packages: write      # 允许推送到 GitHub Container Registry (GHCR)

# 环境变量，方便统一管理
env:
  # 定义镜像的基础名称，会自动使用 "用户名/仓库名"
  IMAGE_BASENAME: ghcr.io/${{ github.repository_owner }}/singbox-wgcf-proxy

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 检出仓库代码
        uses: actions/checkout@v4

      - name: 🔧 设置 Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 登录到 GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📦 准备版本号和镜像标签
        id: prep
        run: |
          # 从 Release 标签 (如 v1.2.3) 中提取纯版本号 (1.2.3)
          VERSION_NUM=${{ github.ref_name }}
          VERSION_NUM=${VERSION_NUM#v}
          
          # 定义将要生成的 .tar 文件名
          TAR_NAME="singbox-wgcf-proxy-arm64-${{ github.ref_name }}.tar"
          
          # 定义完整的镜像标签，例如：ghcr.io/user/repo:latest, ghcr.io/user/repo:v1.2.3
          IMAGE_TAGS="${{ env.IMAGE_BASENAME }}:latest,${{ env.IMAGE_BASENAME }}:${{ github.ref_name }}"
          
          # 将变量输出，供后续步骤使用
          echo "VERSION_NUM=${VERSION_NUM}" >> $GITHUB_ENV
          echo "TAR_NAME=${TAR_NAME}" >> $GITHUB_ENV
          echo "IMAGE_TAGS=${IMAGE_TAGS}" >> $GITHUB_ENV

      - name: 🛠️ 构建、推送并打包镜像
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/arm64
          push: true
          tags: ${{ env.IMAGE_TAGS }}
          # 关键一步：将 Release 版本号作为构建参数传递给 Dockerfile
          build-args: |
            SINGBOX_VERSION=${{ env.VERSION_NUM }}
          # 优化：同时将构建结果导出为 .tar 文件，避免二次构建
          outputs: type=docker,dest=${{ env.TAR_NAME }}

      - name: ⬆️ 上传打包文件到 Release
        uses: softprops/action-gh-release@v2
        with:
          # 上传我们刚刚导出的 .tar 文件
          files: ${{ env.TAR_NAME }}
